/**
 * see https://www.typescriptlang.org/tsconfig
 */
{
  "compilerOptions": {
    "target": "esnext",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "esnext",                          /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "sourceMap": true,                           /* Generates corresponding '.map' file. */
    "removeComments": true,                      /* Strips all comments from TypeScript files when converting into JavaScript */
    "strict": true,                              /* Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file. */
    "alwaysStrict": true,                        /* Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file. */
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,                 /* When enabled, this flag causes functions parameters to be checked more correctly. */
    "strictPropertyInitialization": true,
    "noImplicitThis": true,                      /* Raise error on ‘this’ expressions with an implied ‘any’ type. */
    "noUnusedLocals": true,                      /* Report errors on unused local variables. */
    // eslintに任せる
    //"noUnusedParameters": true,                  /* Report errors on unused parameters in functions. */
    "noImplicitReturns": true,                   /* When enabled, TypeScript will check all code paths in a function to ensure they return a value.*/
    "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statements. Ensures that any non-empty case inside a switch statement includes either break or return. This means you won’t accidentally ship a case fallthrough bug. */
    "esModuleInterop": true,                     /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "skipLibCheck": true,                        /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true,    /* Disallow inconsistently-cased references to the same file. */
    "moduleResolution": "node"
  },
  "exclude": [
    "dist/**/*.ts",
    "**/*.text.ts"
  ]
}
